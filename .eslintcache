[{"C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\index.js":"1","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\App.js":"2","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\reportWebVitals.js":"3","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\LoginAndSignup\\login.jsx":"4","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\ChatPage\\chatHome.jsx":"5","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\config\\firebaseconfig.jsx":"6","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\config\\router.jsx":"7","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\LoginAndSignup\\signup.jsx":"8","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\utility\\utility.jsx":"9","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\components\\header.jsx":"10","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\components\\UsersList\\userlist.jsx":"11","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\components\\chatpage\\chatpage.jsx":"12"},{"size":500,"mtime":1611645161809,"results":"13","hashOfConfig":"14"},{"size":1053,"mtime":1611815991592,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":2087,"mtime":1612133761495,"results":"17","hashOfConfig":"14"},{"size":1815,"mtime":1612139244655,"results":"18","hashOfConfig":"14"},{"size":563,"mtime":1611784468131,"results":"19","hashOfConfig":"14"},{"size":929,"mtime":1612134044486,"results":"20","hashOfConfig":"14"},{"size":3115,"mtime":1612138215481,"results":"21","hashOfConfig":"14"},{"size":1757,"mtime":1611821602450,"results":"22","hashOfConfig":"14"},{"size":783,"mtime":1612139949654,"results":"23","hashOfConfig":"14"},{"size":1997,"mtime":1612138819174,"results":"24","hashOfConfig":"14"},{"size":6466,"mtime":1612138587782,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wifqeb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\index.js",[],["59","60"],"C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\App.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import './App.css';\nimport Login from './LoginAndSignup/login'\nimport { useEffect, useState } from 'react';\nimport  AppRouter  from \"./config/router\";\n// import fire from './firebaseconfig';\nimport app from 'firebase/app'\nimport firebase from 'firebase'\n// import {fire} from './firebaseconfig'\n// if (!app.apps.length) {\n// }\nimport Chathome from './ChatPage/chatHome'\nimport fire from './config/firebaseconfig'\nimport { useHistory } from 'react-router-dom';\nfunction App() {\n  const history=useHistory();\n  const [user,setUser]=useState('');\n  const [emailError,setEmailError]=useState('');\n  const [hasAccount,setHasAccount]=useState(false);\n  const [passwordError,setPasswordError]=useState('');\n\n\n  \n  // const authListner=()=>{\n    // firebase.auth().onAuthStateChanged((user)=>{\n    //   if(user){\n    //     history.push(\"/Chathome\")\n    //   }else{\n    //     history.push(\"/\")\n    //   }\n    // })\n  // }\n\n  // useEffect(()=>{authListner()},[])\n  return (\n    <div className=\"App\">\n    <AppRouter/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\reportWebVitals.js",[],"C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\LoginAndSignup\\login.jsx",["76","77","78"],"import React,{useState,useEffect} from 'react'\r\nimport './login.css'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport handleLogin from '../App'\r\nimport fire  from \"../config/firebaseconfig\";\r\nimport { IsLogedIn } from '../utility/utility';\r\n\r\nexport const Login =(props)=>{\r\n    const [email,setEmail]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const history=useHistory()\r\n    // const {email, setEmail, password, setPassword\r\n    // ,handleSignup,handleLogin,hasAccount, setHasAccount} =props\r\n    IsLogedIn()\r\n    const handleLogin=()=>{\r\n          console.log(email,password)\r\n        fire.auth().signInWithEmailAndPassword(email,password).then((usercredentials)=>{\r\n          console.log(usercredentials.user)\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          history.replace('/Chathome')\r\n        })\r\n        .catch((err)=>{\r\n          switch(err.code){\r\n            case \"auth/invalid-email\":\r\n            case \"auth/user-disabled\":\r\n            case \"auth/user-not-found\":\r\n              alert(err.message)\r\n            //   setEmailError(err.message);\r\n              break;\r\n            case \"auth/wrong-password\":\r\n            //   setPasswordError(err.message);\r\n              alert(err.message)\r\n    \r\n              break;\r\n    \r\n          }\r\n        })\r\n      }\r\n    return(\r\n        <section className='login'>\r\n            <div className='loginContainer'>\r\n                <label>Email</label>\r\n                <input type=\"text\" autoFocus required value={email} onChange={e=>{setEmail(e.target.value)}}/>\r\n                <label>Password</label>\r\n                <input type=\"password\" autoFocus required value={password} onChange={e=>{setPassword(e.target.value)}}/>\r\n                <div className='btnContainer'>\r\n                    <button onClick={()=>{handleLogin()}}>Sign in</button>\r\n                    <p>Don't have an account <span onClick={()=>{history.push('/Signup')}}>Signup</span></p>                \r\n            </div>\r\n            </div>\r\n          \r\n\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\ChatPage\\chatHome.jsx",["79","80","81","82"],"import React, { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport './chatHome.css'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {Header} from \"../components/header\";\r\nimport fire from '../config/firebaseconfig';\r\nimport UserList from '../components/UsersList/userlist';\r\nimport Chatpage from '../components/chatpage/chatpage';\r\nconst Chathome=()=>{\r\nconst [name,setName]=useState(\"\")\r\nfire.auth().onAuthStateChanged(async(user)=>{\r\n    var db=fire.firestore()\r\n    if(user)\r\n    {\r\n        db.collection(\"Users\")\r\n        .where(\"id\",\"==\",user.uid)\r\n        .get()\r\n        .then((querysnapshot)=>{\r\n            querysnapshot.forEach((docs)=>{\r\n                console.log(docs.data().Name)\r\n                setName(docs.data().Name)\r\n            })\r\n        })\r\n    }\r\n})\r\nreturn(\r\n    <div style={{display:\"block\",flexFlow:\"column\"}}>\r\n        <div><Header name={name}/></div>\r\n        <div className=\"row m-2\">\r\n            <div className=\"col-12 \" style={{width:\"100px\"}}><UserList/></div>\r\n            {/* <div className=\"col-7\" style={{}}><Chatpage/></div> */}\r\n        </div>\r\n    </div>\r\n\r\n \r\n//     <div className=\"container\">\r\n//   <div className=\"ccccc row align-items-start\">\r\n//     <div className=\"col-3\">\r\n//       One of three columns\r\n//     </div>\r\n//     <div className=\"col-3\">\r\n//       One of three columns\r\n//     </div>\r\n//     <div className=\"col-3\">\r\n//       One of three columns\r\n//     </div>\r\n//   </div>\r\n//   </div>\r\n\r\n\r\n\r\n\r\n    // <div className=\"container\" >\r\n    //     <div className='bg-primary header row'>\r\n    //     {/* bg-primary' */}\r\n    //         <div className=\"col\">Hello</div>\r\n    //         <div className=\"col\">hi</div>\r\n    //     </div>\r\n        \r\n    // </div>\r\n)\r\n}\r\nexport default Chathome\r\n","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\config\\firebaseconfig.jsx",[],"C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\config\\router.jsx",["83"],"import React from \"react\";\r\nimport {BrowserRouter as Router,Route, useHistory} from \"react-router-dom\";\r\nimport Chathome from \"../ChatPage/chatHome\";\r\nimport Chatpage from \"../components/chatpage/chatpage\";\r\n// import {UserList} from \"../components/UsersList/userlist\";\r\nimport Login from \"../LoginAndSignup/login\";\r\nimport Signup from \"../LoginAndSignup/signup\"\r\nimport fire from \"./firebaseconfig\";\r\n\r\n\r\n\r\nconst AppRouter=()=>{\r\n    const history=useHistory()\r\n    const login=()=>{ fire.auth().onAuthStateChanged(async (user)=>{\r\n        if(user)\r\n        {\r\n            history.push(\"/Chathome\")\r\n        }\r\n    })}\r\nreturn(\r\n    <Router>\r\n        <Route exact={true} path='/' component={Login}/>\r\n        <Route path='/Signup' component={Signup}/>\r\n        <Route path='/Chathome' component={Chathome} />\r\n        <Route path='/list/:senderid' component={Chatpage}/>\r\n        \r\n    </Router>\r\n)\r\n}\r\nexport default AppRouter;","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\LoginAndSignup\\signup.jsx",["84","85","86"],"import React,{useState,useEffect} from 'react'\r\nimport './login.css'\r\nimport { useHistory } from \"react-router-dom\"\r\n// import handleSignup from \"../App\"\r\nimport firebase from \"firebase\";\r\n\r\nimport fire from '../config/firebaseconfig'\r\nimport { adduser } from '../utility/utility';\r\n\r\nconst Signup =()=>{\r\n    const history=useHistory();\r\n    const [email,setEmail]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const [name,setname]=useState('')\r\n\r\n    // useEffect(()=>{\r\n    //   async function checklogin(){\r\n    //     fire.auth().onAuthStateChanged((user)=>{\r\n    //       if(user){\r\n    //         history.push(\"/Chathome\")\r\n    //       }\r\n    //       else{\r\n    //         history.push(\"/\")\r\n    //       }\r\n    //     })\r\n    //   }\r\n    //   checklogin();\r\n    // },[])\r\n    const HandleSignup=(email,password)=>{\r\n    console.log(email,password)\r\n//  useEffect((email,password)=>{\r\n    // async function signup(){\r\n      firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then((loginCredentials)=>{\r\n          \r\n          console.log('login successfully  ',loginCredentials.user)\r\n        //   alert(\"Registered Successfully\")\r\n          adduser({Name:name,Email:email,id:\"\"});\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setname(\"\");\r\n        })\r\n        .catch((err)=>{\r\n          switch(err.code){\r\n      case \"auth/email-already-in-use\":\r\n      case \"auth/invalid-email\":\r\n        alert(err.message)\r\n        // setEmailError(err.message);\r\n        break;\r\n      case \"auth/weak-password\":\r\n        alert(err.message)\r\n        // setPasswordError(err.message);\r\n        break;\r\n    \r\n    }\r\n        })\r\n    // }\r\n    // signup()\r\n//  },[])\r\n \r\n  }\r\n\r\n    return(\r\n        <section className='login'>\r\n            <div className='loginContainer'>\r\n                <label>Username</label>\r\n                <input type=\"text\" autoFocus required value={name} onChange={e=>{setname(e.target.value)}}/>\r\n                <label>Email</label>\r\n                <input type=\"text\" autoFocus required value={email} onChange={e=>{setEmail(e.target.value)}}/>\r\n                <label>Password</label>\r\n                <input type=\"password\" autoFocus required value={password} onChange={e=>{setPassword(e.target.value)}}/>\r\n                <div className='btnContainer'>\r\n                {/* {hasAccount?( */}\r\n                    {/* <>\r\n                    <button onClick={handleLogin}>Sign in</button>\r\n                    <p>Don't have an account <span onClick={()=>{setHasAccount(!hasAccount)}}>Signup</span></p>\r\n                    </> */}\r\n                     {/* ):( */}\r\n                         \r\n                          <button onClick={()=>{HandleSignup(email,password)}}>Sign up</button>\r\n                          <p>Have an account? <span onClick={()=>{history.push(\"/\")}}>Sign in</span></p>\r\n                         \r\n                     {/* ) */}\r\n                    \r\n                {/* } */}\r\n                \r\n            </div>\r\n            </div>\r\n          \r\n\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Signup;","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\utility\\utility.jsx",["87"],"import { useEffect } from 'react'\r\n// import fire from '../config/firebaseconfig'\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport fire from '../config/firebaseconfig';\r\n\r\n\r\nexport const IsLogedIn = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function FetchData() {\r\n      await firebase.auth().onAuthStateChanged(function (user) {\r\n        if (user) {\r\n          history.replace('/Chathome')\r\n        } else {\r\n          history.replace(\"/\");\r\n        }\r\n      });\r\n    }\r\n    FetchData();\r\n  }, []);\r\n\r\n}\r\n\r\nexport const adduser=(User)=>{\r\n  console.log('====>',User.uid)\r\n  fire.auth().onAuthStateChanged(async (user)=>{\r\n    if(user){\r\n      User.id=user.uid\r\n      console.log('=====================>', User)\r\n      var db=fire.firestore();\r\n      db.collection('Users').doc(user.uid).set(User)\r\n    }\r\n  })\r\n  \r\n\r\n\r\n}\r\n// export const HandleSignup=(email,password)=>{\r\n//     console.log(email,password)\r\n//  useEffect((email,password)=>{\r\n//     // async function signup(){\r\n//       firebase.auth().createUserWithEmailAndPassword(email,password)\r\n//         .then((loginCredentials)=>{\r\n          \r\n//           console.log('login successfully  ',loginCredentials.user)\r\n//         })\r\n//         .catch((err)=>{\r\n//           switch(err.code){\r\n//       case \"auth/email-already-in-use\":\r\n//       case \"auth/invalid-email\":\r\n//         alert(err.message)\r\n//         // setEmailError(err.message);\r\n//         break;\r\n//       case \"auth/weak-password\":\r\n//         alert(err.message)\r\n//         // setPasswordError(err.message);\r\n//         break;\r\n    \r\n//     }\r\n//         })\r\n//     // }\r\n//     // signup()\r\n//  },[])\r\n \r\n//   }\r\n\r\n//   // export default handleSignup;","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\components\\header.jsx",[],"C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\components\\UsersList\\userlist.jsx",["88","89"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/firebaseconfig\";\r\nimport Chatpage from \"../chatpage/chatpage\";\r\n\r\n\r\n\r\nexport const UserList=()=>{\r\n    const [userlist,setUserList]=useState([])\r\n    const history=useHistory();\r\n    let db=fire.firestore();\r\n    let userdata=[]\r\n    useEffect(()=>{\r\n        fire.auth().onAuthStateChanged(async (user)=>{\r\n            if(user){\r\n                db.collection('Users').get().then((querysnapshot)=>{\r\n                    querysnapshot.forEach((docs)=>{\r\n                        if(docs.data().id !== user.uid){\r\n                            userdata.push({Name:docs.data().Name,id:docs.data().id,Email:docs.data().Email})\r\n                        }\r\n                    })\r\n                    setUserList(userdata)\r\n                })\r\n            }\r\n            console.log(\"Userdata=========>\",userdata)\r\n            return userdata\r\n        })\r\n    },[])\r\n    const chatpage=(id)=>{\r\n        history.push(\"/list/\"+id)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n       {\r\n           userlist.map((user,key)=>(\r\n               <ul key={key}>\r\n         <div onClick={()=>{chatpage(user.id)}} className='row' style={{cursor:\"pointer\",display:'block',borderColor:\"grey\", borderStyle:\"solid\"}}>\r\n            <div className=\"col-md bg-gradient bg-secondary\" style={{color:\"white\",fontFamily:\"cursive\"}} >\r\n                {user.Name}\r\n            </div>\r\n            <div className=\"col-md\">message</div>\r\n        </div>\r\n         </ul> \r\n           ))\r\n       }     \r\n         {/* <li>\r\n         <div className='dddd row' style={{display:'block',borderColor:\"grey\", borderStyle:\"solid\",borderRadius:\"5cm\"}}>\r\n            <div className=\"bg-gradient bg-secondary\" style={{color:\"white\",fontFamily:\"cursive\"}} >\r\n                name\r\n            </div>\r\n            <div>message</div>\r\n        </div>\r\n         </li> */}\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default UserList;","C:\\Users\\muham\\OneDrive\\Desktop\\ChatApp\\chatapp\\src\\components\\chatpage\\chatpage.jsx",["90","91","92","93","94"],"import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport fire from \"../../config/firebaseconfig\";\r\nimport firestore from \"firebase/app\"\r\n// import app, { firestore } from \"firestore\";\r\nimport firebase from \"firebase\";\r\n\r\n\r\n\r\nconst Chatpage=(props)=>{\r\n    // const [senderId,setSenderId]=useState(\"\")\r\n    // console.log(\"Mu props==============>\", props)\r\n    const [messagesList,setMessagesList]=useState([])\r\n    const [message,setMessage]=useState(\"\")\r\n    const [senderName,setSenderName]=useState(\"\");\r\n    const {senderid}=useParams();\r\n    const [chatId,setChatId]=useState(\"\");\r\n    const [receiverId,setReceiverId]=useState(\"\");\r\n    const [receiverName,setReceiverName]=useState(\"\");\r\n    console.log(\"id==>\",senderid)\r\n\r\n    \r\n    console.log(\"receiverId\",receiverId)\r\n    var db=fire.firestore()\r\n\r\n    useEffect(()=>{\r\n     db.collection(\"Users\").doc(senderid).get().then((doc)=>{\r\n        setSenderName(doc.data().Name);\r\n        console.log(senderName)\r\n    })\r\n    },[senderid])\r\n    useEffect(()=>{\r\n        fire.auth().onAuthStateChanged(async(user)=>{\r\n            if(user){\r\n                setReceiverId(user.uid)\r\n                db.collection(\"Users\").doc(user.uid).get().then((doc)=>{\r\n                    console.log(doc.data().Name)\r\n                    setReceiverName(doc.data().Name);\r\n                    console.log(receiverName)\r\n                })\r\n            }\r\n        })\r\n\r\n        if (receiverId > senderid) {\r\n            setChatId(senderid + receiverId);\r\n          } else {\r\n            setChatId(receiverId + senderid);\r\n          }\r\n    },[senderid,receiverId])\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n          if(chatId){\r\n            await db\r\n            .collection(\"Chats\")\r\n            .doc(chatId)\r\n            .collection(\"Messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot(function (doc) {\r\n              var messages = [];\r\n              doc.forEach((docs) => {\r\n                messages.push({\r\n                  messageContent: docs.data().messageContent,\r\n                  senderId: docs.data().senderId,\r\n                  timestamp: docs.data().timestamp,\r\n                });\r\n              });\r\n              setMessagesList(messages);\r\n            });\r\n          console.log(messagesList,\"chatid \",chatId)\r\n          }\r\n        }\r\n        fetchData();\r\n      }, [chatId]);\r\n    const createChat=(senderid,senderName,receiverId,receiverName,chatId,message)=>{\r\n        const now = new Date();\r\n        console.log(message)\r\n        let createChatParameters = {\r\n            participantIds: [receiverId, senderid],\r\n            participants: [\r\n              {\r\n                name: senderName,\r\n                uid: senderid,\r\n              },\r\n              {\r\n                name: receiverName,\r\n                uid: receiverId,\r\n              },\r\n            ],\r\n          }\r\n          const newMessage={\r\n              messageContent:message,\r\n              senderId:receiverId,\r\n              timestamp: firebase.firestore.Timestamp.fromDate(now)\r\n          }\r\n          db.collection(\"Chats\").get().then((docs)=>{\r\n              docs.forEach((doc)=>{\r\n                  if(chatId===doc.id){\r\n                    db.collection(\"Chats\").doc(chatId).collection(\"Messages\").add(newMessage)\r\n                  }\r\n                  else{\r\n                      console.log(\"no\")\r\n                      db.collection(\"Chats\").doc(chatId).set(createChatParameters)\r\n                  }\r\n              })\r\n          })\r\n      \r\n    }\r\n    console.log(\"========================================================>\",messagesList)\r\nreturn(\r\n    <div className=\"container-fluid\" >\r\n        <div className=\"row \">\r\n            <div  className=\"col-12 bg-primary\" style={{width:\"100%\"}}><h4>{senderName}</h4></div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n            {\r\n           messagesList.map((messages,key)=>(\r\n            <ul key={key} className=\"list-group\" >\r\n              {messages.senderId==receiverId?\r\n            <li class=\"list-group-item\"  style={{textAlign: \"end\",backgroundColor:\"#6698FF\"}}> <p></p> <p style={{backgroundColor:\"#6698FF\"}}>{messages.messageContent}</p> \r\n            </li>:\r\n            <li class=\"list-group-item\"  style={{textAlign: \"start\",backgroundColor:\"#82CAFA\"}}><p style={{fontSize:\"10px\"}}>{senderName}</p>{messages.messageContent}</li>\r\n              }\r\n          {/* <li class=\"list-group-item\" style={{textAlign:\"center\"}}>{messages.messageContent}</li> */}\r\n\r\n          \r\n\r\n          </ul>\r\n        //        <ul key={key}>\r\n        //  <div className='row' style={{display:'block', borderStyle:\"solid\"}}>\r\n        //     {/* <div className=\"col-md bg-gradient bg-secondary\" style={{color:\"white\",fontFamily:\"cursive\"}} >\r\n        //         {user.Name}\r\n        //     </div> */}\r\n        //     <div className=\"col-md\">{messages.messageContent}</div>\r\n        // </div>\r\n        //  </ul> \r\n           ))\r\n       }\r\n                {/* {messagesList.map((messages,key)=>{\r\n                    <ul key={key}>\r\n                         color={message.senderId === receiverId ? \"secondary\" : \"primary\"}\r\n                        <div>{messages.messageContent}</div>\r\n                    </ul>\r\n                })} */}\r\n            </div>\r\n        </div>\r\n        {/* <div className=\"row\" style={{position:\"relative\",marginTop:\"180px\", justifyContent:\"flex-end\",display:\"flex\"}}>\r\n        <div className=\"col-md input-group mb-3\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter Message\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" style={{width:\"\"}}/>\r\n        <button class=\"btn btn-outline-primary\" type=\"button\" id=\"button-addon2\">Send</button>\r\n</div>\r\n        </div> */}\r\n        <div style={{height:\"100%\"}}></div>\r\n        <div className=\"row\" style={{position:\"absolute\",width:\"100%\",bottom:\"40px\"}}>\r\n            <div className=\"col-12\">\r\n                <input value={message} onChange={(e)=>{setMessage(e.target.value)}} type=\"text\" placeholder=\"Enter Message\" style={{width:\"100%\", height:\"100%\"}}/>\r\n             <button  onClick={()=>{createChat(senderid,senderName,receiverId,receiverName,chatId,message)}} className=\"btn btn-outline-primary\" type=\"button\" id=\"button-addon2\">Button</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n}\r\nexport default Chatpage",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"103","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"104","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":11},{"ruleId":"99","severity":1,"message":"105","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"106","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":16},{"ruleId":"99","severity":1,"message":"107","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":12},{"ruleId":"99","severity":1,"message":"108","line":15,"column":9,"nodeType":"101","messageId":"102","endLine":15,"endColumn":16},{"ruleId":"99","severity":1,"message":"109","line":16,"column":10,"nodeType":"101","messageId":"102","endLine":16,"endColumn":14},{"ruleId":"99","severity":1,"message":"110","line":16,"column":15,"nodeType":"101","messageId":"102","endLine":16,"endColumn":22},{"ruleId":"99","severity":1,"message":"111","line":17,"column":10,"nodeType":"101","messageId":"102","endLine":17,"endColumn":20},{"ruleId":"99","severity":1,"message":"112","line":17,"column":21,"nodeType":"101","messageId":"102","endLine":17,"endColumn":34},{"ruleId":"99","severity":1,"message":"113","line":18,"column":10,"nodeType":"101","messageId":"102","endLine":18,"endColumn":20},{"ruleId":"99","severity":1,"message":"114","line":18,"column":21,"nodeType":"101","messageId":"102","endLine":18,"endColumn":34},{"ruleId":"99","severity":1,"message":"115","line":19,"column":10,"nodeType":"101","messageId":"102","endLine":19,"endColumn":23},{"ruleId":"99","severity":1,"message":"116","line":19,"column":24,"nodeType":"101","messageId":"102","endLine":19,"endColumn":40},{"ruleId":"99","severity":1,"message":"103","line":1,"column":24,"nodeType":"101","messageId":"102","endLine":1,"endColumn":33},{"ruleId":"99","severity":1,"message":"117","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":24,"column":11,"nodeType":"120","messageId":"121","endLine":37,"endColumn":12},{"ruleId":"99","severity":1,"message":"122","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"123","line":2,"column":15,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"124","line":2,"column":26,"nodeType":"101","messageId":"102","endLine":2,"endColumn":29},{"ruleId":"99","severity":1,"message":"125","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":16},{"ruleId":"99","severity":1,"message":"126","line":14,"column":11,"nodeType":"101","messageId":"102","endLine":14,"endColumn":16},{"ruleId":"99","severity":1,"message":"103","line":1,"column":24,"nodeType":"101","messageId":"102","endLine":1,"endColumn":33},{"ruleId":"99","severity":1,"message":"107","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":44,"column":11,"nodeType":"120","messageId":"121","endLine":55,"endColumn":6},{"ruleId":"127","severity":1,"message":"128","line":22,"column":6,"nodeType":"129","endLine":22,"endColumn":8,"suggestions":"130"},{"ruleId":"99","severity":1,"message":"125","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"127","severity":1,"message":"131","line":28,"column":7,"nodeType":"129","endLine":28,"endColumn":9,"suggestions":"132"},{"ruleId":"99","severity":1,"message":"133","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":17},{"ruleId":"127","severity":1,"message":"134","line":31,"column":7,"nodeType":"129","endLine":31,"endColumn":17,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"136","line":49,"column":7,"nodeType":"129","endLine":49,"endColumn":28,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"138","line":73,"column":10,"nodeType":"129","endLine":73,"endColumn":18,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":119,"column":33,"nodeType":"142","messageId":"143","endLine":119,"endColumn":35},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'app' is defined but never used.","'firebase' is defined but never used.","'Chathome' is defined but never used.","'fire' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'emailError' is assigned a value but never used.","'setEmailError' is assigned a value but never used.","'hasAccount' is assigned a value but never used.","'setHasAccount' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","'handleLogin' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Chatpage' is defined but never used.","'login' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has missing dependencies: 'db' and 'userdata'. Either include them or remove the dependency array.",["147"],"'firestore' is defined but never used.","React Hook useEffect has missing dependencies: 'db' and 'senderName'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'db' and 'receiverName'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'db' and 'messagesList'. Either include them or remove the dependency array.",["150"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [history]",{"range":"161","text":"162"},"Update the dependencies array to be: [db, userdata]",{"range":"163","text":"164"},"Update the dependencies array to be: [db, senderName, senderid]",{"range":"165","text":"166"},"Update the dependencies array to be: [senderid, receiverId, db, receiverName]",{"range":"167","text":"168"},"Update the dependencies array to be: [chatId, db, messagesList]",{"range":"169","text":"170"},[569,571],"[history]",[978,980],"[db, userdata]",[1025,1035],"[db, senderName, senderid]",[1624,1645],"[senderid, receiverId, db, receiverName]",[2416,2424],"[chatId, db, messagesList]"]